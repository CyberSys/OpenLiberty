; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=5

_global_script_classes=[{
"base": "RefCounted",
"class": &"RWChunk",
"language": &"GDScript",
"path": "res://scripts/renderware/rw_chunk.gd"
}, {
"base": "RWChunk",
"class": &"RWClump",
"language": &"GDScript",
"path": "res://scripts/renderware/rw_clump.gd"
}, {
"base": "RWChunk",
"class": &"RWGeometry",
"language": &"GDScript",
"path": "res://scripts/renderware/rw_geometry.gd"
}, {
"base": "RWChunk",
"class": &"RWGeometryList",
"language": &"GDScript",
"path": "res://scripts/renderware/rw_geometry_list.gd"
}, {
"base": "RWChunk",
"class": &"RWMaterial",
"language": &"GDScript",
"path": "res://scripts/renderware/rw_material.gd"
}, {
"base": "RWChunk",
"class": &"RWMaterialList",
"language": &"GDScript",
"path": "res://scripts/renderware/rw_material_list.gd"
}, {
"base": "RWChunk",
"class": &"RWRaster",
"language": &"GDScript",
"path": "res://scripts/renderware/rw_raster.gd"
}, {
"base": "RWChunk",
"class": &"RWString",
"language": &"GDScript",
"path": "res://scripts/renderware/rw_string.gd"
}, {
"base": "RWChunk",
"class": &"RWTexture",
"language": &"GDScript",
"path": "res://scripts/renderware/rw_texture.gd"
}, {
"base": "RWChunk",
"class": &"RWTextureDict",
"language": &"GDScript",
"path": "res://scripts/renderware/rw_texture_dict.gd"
}]
_global_script_class_icons={
"RWChunk": "",
"RWClump": "",
"RWGeometry": "",
"RWGeometryList": "",
"RWMaterial": "",
"RWMaterialList": "",
"RWRaster": "",
"RWString": "",
"RWTexture": "",
"RWTextureDict": ""
}

[application]

config/name="GTA 3 Godot"
run/main_scene="res://startup.tscn"
config/features=PackedStringArray("4.0", "Forward Plus")
config/icon="res://icon.svg"

[autoload]

GameManager="*res://scripts/game_manager.gd"
MapBuilder="*res://scripts/map_builder.gd"
AssetLoader="*res://scripts/asset_loader.gd"

[input]

movement_forward={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":87,"unicode":0,"echo":false,"script":null)
]
}
movement_backward={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":83,"unicode":0,"echo":false,"script":null)
]
}
movement_left={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":65,"unicode":0,"echo":false,"script":null)
]
}
movement_right={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":68,"unicode":100,"echo":false,"script":null)
]
}
movement_up={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":69,"unicode":0,"echo":false,"script":null)
]
}
movement_down={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":81,"unicode":0,"echo":false,"script":null)
]
}

[rendering]

anti_aliasing/quality/msaa_3d=1
